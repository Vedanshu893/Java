public class Solution {

     public boolean checkBit(int b, int i){
        if(((b>>i)&1)==1){
            return true;
        }
        else{
            return false;
        }
    }

    

    public int solve(ArrayList<Integer> A) {

        int len = A.size();

        int Ar[] = new int[len];
        for(int i=0; i<A.size(); i++){
            Ar[i] = A.get(i);
        }



        int n = Ar.length;
        //checking bit from left to right MSB to LSB for two maximaum set bits
        int ans = 0;
        for(int i=31; i>=0; i--){
            int count =0;
            for(int j=0; j<n; j++){
                if(checkBit(Ar[j],i)){
                    count++;
                }
            }
            //if we found two bits that are set and their count is greater than equal two we add or set ith bit 1
            if(count>=2){
                ans = ans|(1<<i);
                //traverse again to the array to check bits and if bit is unset we directly create A[j]=0 for that element
                for(int j=0; j<n; j++){
                    if(!checkBit(Ar[j],i)){
                        Ar[j]=0;
                    }
                }
            }
        }
        return ans;
    }
}
