public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int isValidSudoku(final List<String> A) {
        HashSet<String> hs = new HashSet<>();
       
        // one iteration approach
        // make one string at on each [row][col]
        // insert into HashSet if not present
        // string row = "row"+rownumber+charAtpartiular Column
        // string col = "col"+colnumber+charAtpartiular row
        // string box = "box"+boxnumber+charAtpartiular row/Column
        // boxnumber formula -> (row/3)*3 + col/3;
        // try dry run on paper
 
        for(int i=0;i<A.size();i++)
        {
            for(int j=0;j<A.size();j++)
            {
                if(A.get(i).charAt(j) != '.')
                {  
                    if(!hs.add("row"+i+A.get(i).charAt(j)) || !hs.add("col"+j+A.get(i).charAt(j)) )
                        return 0;
                    if( !hs.add("box"+((i/3)*3+(j/3))+A.get(i).charAt(j)) )  
                        return 0;
                }
            }
        }
        return 1;
    }
}
