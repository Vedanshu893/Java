package com.company.LinkedList;

//Creation of Linked List for creating n nodes with elements from 1 to n

public class LinkedListCreation {

    public static class Node {
        int data = 0;
        Node next = null;

        Node(int x) {
            data = x;
            next = null;
        }
    }

    // This method returns size of the Linked List
    public static int size_LL(Node head) {
        int c = 0;
        Node temp = head;

        while (temp != null) {
            c += 1;
            temp = temp.next;
        }
        return c;
    }


    // This method prints node elements
    public static void printLL(Node head) {

        Node temp_print = head;
        while (temp_print != null) {
            System.out.println(temp_print.data);
            temp_print = temp_print.next;
        }

        // Printing tail node
        // This step is mandatory if, logical comparison is being done with "temp_print.next" not with "temp_print == null"
        //System.out.println(temp_print.data);
    }


    public static void main(String[] args) {

        int n = 10;

        //Initializing Head node & "temp" as obj reference

        Node temp = new Node(1);
        Node head = temp;

        // Creating other nodes
        for (int i = 2; i <= n; i++) {
            temp.next = new Node(i);
            temp = temp.next;
        }

        //Printing node elements
        printLL(head);

        //Returning size of LL
        System.out.println(size_LL(head));
    }
}
